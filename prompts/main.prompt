---
model: googleai/gemini-1.5-flash-latest
config:
  temperature: 0.9
  safetySettings:
  - category: HARM_CATEGORY_HATE_SPEECH
    threshold: BLOCK_NONE
  - category: HARM_CATEGORY_DANGEROUS_CONTENT
    threshold: BLOCK_NONE
  - category: HARM_CATEGORY_HARASSMENT
    threshold: BLOCK_NONE
  - category: HARM_CATEGORY_SEXUALLY_EXPLICIT
    threshold: BLOCK_NONE

input:
  type: object
  properties:
    name: 
      type: string
    age:
      type: number
    gender:
      type: string
      enum:
        - male
        - female
        - other
    lifestyle:
      type: string
      enum: 
        - sedentary
        - active
        - hectic
    healthGoals:
      type: array
      items:
        type: string
    healthIssues:
      type: array
      items:
        type: string
    healthRecords:
      type: object
      properties:
        weight:
          type: number
        height:
          type: number
        waterPercent:
          type: number
          nullable: true
        fatPercent:
          type: number
          nullable: true
        boneMass:
          type: number
          nullable: true
        muscleMass:
          type: number
          nullable: true
        calories:
          type: number
          nullable: true
    foodPreferences:
      type: object
      properties:
        dietaryPreferences:
          type: string
          enum:
            - vegetarian
            - nonvegetarian
            - vegan
        cookingExperience:
          type: string
          enum: 
            - beginner
            - intermediate
            - advanced
        spiceLevel:
          type: number
        sweetHotLevel:
          type: number
        mealCount:
          type: number
    allergies:
      type: array
      items:
        type: string
    favouriteFoods:
      type: array
      items:
        type: string
output:
  type: object
  properties:
    menu:
      type: object
      properties:
        dayofWeek:
          type: object
          properties:
            recipeName:
              type: string
            levelOfCook:
              type: string
              enum:
                - easy
                - medium
                - hard
            timeRequireToCook:
              type: string
            macroNutrientIndex:
              type: object
              properties:
                protein:
                  type: string
                carbs:
                  type: string
                calories:
                  type: string
            ingredients:
              type: array
              items: 
                type: string
            recipe:
              type: array
              items: 
                type: string
            cutlery:
              type: array
              items: 
                type: string                      
--- 
`
Generate a menu suggestion for a week except sunday (cheat day) for {{name}}, who is {{age}} years old, has a {{lifestyle}} lifestyle, and identifies as {{gender}}. 
Their preferred nutrition type is {{foodPreferences.dietaryPreferences}}, and they have allergies to {{allergies}}. Their spice tolerance level is {{foodPreferences.spiceLevel}}, also their preference for sweetness or hotness is {{foodPreferences.sweetHotLevel}} (Levels range between 1 and 100, with lower numbers indicating a preference for sweetness and higher numbers for hotness). 
Their cooking expertise is {{foodPreferences.cookingExperience}}. Their favourite foods include {{favouriteFoods}}.

They have the following health goals: {{healthGoals}}, and health issues: {{healthIssues}}. 
They have the following health metrics: {{healthRecords}}.

The menu should consist of six days of meal suggestions from Monday to Saturday. 
For each day, include:  
- The name of the recipe (`recipeName`), 
- The cooking difficulty (`levelOfCook`), 
- Time required to prepare the meal (`timeRequireToCook`),  
- Macro-nutrient values (as key : value pair) in the format of macroNutrientIndex: { protein : value, carbs: value, and calories : value } (value as string),  
- A list of ingredients required to prepare the recipe,  
- The step-by-step recipe instructions, and  
- The list of cutlery and utensils needed. 

Ensure the output is strictly formatted as a JSON object, matching the structure defined in the "output" schema provided above.
`